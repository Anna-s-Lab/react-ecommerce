import { createSlice } from "@reduxjs/toolkit";

/*This code is implementing a Redux slice for managing authentication state using Redux Toolkit,
 a library that simplifies writing Redux logic.  */

const initialState = {
  isAuthenticated: false, // Tracks whether a user is authenticated (default is false).
  isLoading: false, // Tracks whether an authentication process (e.g., login) is in progress (default is false).
  user: null, // Holds information about the authenticated user (default is null).
};

/*The createSlice function helps you write Redux slices more easily.
A slice represents a specific piece of the Redux store, including its state, actions, and reducers. */

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    // Defines functions (called reducers) that handle changes to this slice of the state.
    setUser: (state, action) => {}, // action is the payload dispatched by Redux actions, usually containing data for updating the state.
  },
});

/*Extracts and exports the action creators (setUser in this case) generated by createSlice.
 Action creators are functions that return action objects used to trigger state updates. */

export const { setUser } = authSlice.actions;
export default authSlice.reducer; // Exports the slice's reducer to be used in the Redux store.
// This reducer will be combined with other reducers (if any) to create the overall Redux store.
